{"title":"笔试题总结","slug":"笔试题总结","date":"2021-10-07","updated":"2021-10-07","comments":true,"path":"api/posts/771.json","excerpt":"<p> 笔试题汇总 1</p>","cover":"/gallery/sort-way.png","covers":["/gallery/sort-way.png"],"content":"<p>笔试题汇总 1</p><a id=\"more\"></a><h2 id=\"2021 小米秋招前端方向第二场笔试\"><a class=\"headerlink\" href=\"#2021 小米秋招前端方向第二场笔试\"></a>2021 小米秋招前端方向第二场笔试 </h2><h3 id=\"选择题\"><a class=\"headerlink\" href=\"# 选择题\"></a> 选择题 </h3><p>1. 使用浏览器访问 http://miui.com/ 时，以下哪些过程发生在<strong> 浏览器端 </strong>？</p><p>a. 构建 HTTP 请求<br>b. 解析 HTTP 请求<br>c. 发送 HTTP 响应<br>d. 渲染页面</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析: 浏览器端构建 HTTP 请求，并发送 -&gt; 服务器端接收到 HTTP 请求，并进行解析 -&gt; 服务器端发送 HTTP 响应 -&gt; 浏览器端接收到响应，并进行页面渲染。</span><br><span class=\"line\">故发生在浏览器端的有 - 构建 HTTP 请求 - 页面渲染 </span><br><span class=\"line\"> 答案 a、d</span><br></pre></td></tr></table></figure><p>2. 下列哪些关于 HTTP/2 的描述是 <strong> 正确 </strong> 的？</p><p>a. 解决了 TCP 队头阻塞的问题 <br>b. 解决了浏览器线头阻塞的问题<br>c. 使用了头部压缩<br>d. 使用二进制分帧封装 HTTP 消息</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析:HTTP&#x2F;0.9：功能简陋，只支持 GET 方法，只能发送 HTML 格式字符串。</span><br><span class=\"line\">HTTP&#x2F;1.0：支持多种数据格式，增加 POST、HEAD 等方法，增加头信息，每次只能发送一个请求（无持久连接）</span><br><span class=\"line\">HTTP&#x2F;1.1：默认持久连接、请求管道化、增加缓存处理、增加 Host 字段、支持断点传输分块传输等。</span><br><span class=\"line\">HTTP&#x2F;2.0：二进制分帧、多路复用、头部压缩、服务器推送 </span><br><span class=\"line\">HTTP&#x2F;3.0：tcp 队头阻塞 (不是链条，是数据流，互不影响)</span><br><span class=\"line\"> 参考链接 https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;28a35094dc5d，</span><br><span class=\"line\">HTTP&#x2F;2 并没有解决这个问题 </span><br><span class=\"line\"> 采用 HTTP&#x2F;2 时，浏览器一般会在单个 TCP 连接中创建并行的几十个乃至上百个传输。</span><br><span class=\"line\">如果 HTTP&#x2F;2 连接双方的网络中有一个数据包丢失，或者任何一方的网络出现中断，整个 TCP 连接就会暂停，丢失的数据包需要被重新传输。因为 TCP 是一个按序传输的链条，因此如果其中一个点丢失了，链路上之后的内容就都需要等待。</span><br><span class=\"line\">参考链接 </span><br><span class=\"line\">https:&#x2F;&#x2F;www.kancloud.cn&#x2F;kancloud&#x2F;http3-explained&#x2F;1395005</span><br><span class=\"line\"> 答案 b、c、d</span><br></pre></td></tr></table></figure><p>3. 下面对于服务端渲染和客户端渲染描述 <strong> 正确 </strong> 的是 </p><p>a. 通过 vue-cli，create-react-app 等工具创建的项目是服务端渲染的<br>b. 服务端渲染的用户体验一定优于客户端渲染<br>c. 服务端渲染对 SEO 更加友好，而且首屏渲染通常更快一些<br>d.SPA 是客户端渲染的</p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析：https:<span class=\"comment\">//ssr.vuejs.org/zh/</span></span><br><span class=\"line\">server-side-render</span><br><span class=\"line\">就是让服务器来渲染页面。</span><br><span class=\"line\">https:<span class=\"comment\">//zhuanlan.zhihu.com/p/171579801</span></span><br><span class=\"line\">优点 </span><br><span class=\"line\"> 与传统 SPA (单页应用程序 (Single-Page Application)) 相比，服务器端渲染 (SSR) 的优势主要在于：</span><br><span class=\"line\">更好的 SEO，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面。</span><br><span class=\"line\">更快的内容到达时间 (time-to-content)，特别是对于缓慢的网络情况或运行缓慢的设备。首屏响应时间变短 </span><br><span class=\"line\"> 缺点 </span><br><span class=\"line\"> 开发条件所限。浏览器特定的代码，只能在某些生命周期钩子函数 (lifecycle hook) 中使用；一些外部扩展库 (external library) 可能需要特殊处理，才能在服务器渲染应用程序中运行。</span><br><span class=\"line\">涉及构建设置和部署的更多要求。与可以部署在任何静态文件服务器上的完全静态单页面应用程序 (SPA) 不同，服务器渲染应用程序，需要处于 Node.js server 运行环境。更多的服务器端负载。在 Node.js 中渲染完整的应用程序，显然会比仅仅提供静态文件的 server 更加大量占用 CPU 资源 (CPU-intensive - CPU 密集)，因此如果你预料在高流量环境 (high traffic) 下使用，请准备相应的服务器负载，并明智地采用缓存策略。</span><br><span class=\"line\">答案 c、d</span><br></pre></td></tr></table></figure><p>4. 有效防止 XSS 的手段有哪些？</p><p>a. 过滤用户请求中的非法字符 <br>b. 对请求中的特殊字符进行转译<br>c. 配置 CSP（Content Security Policy）<br>d. 通过预编译来防止</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析: 参考链接 https:&#x2F;&#x2F;tech.meituan.com&#x2F;2018&#x2F;09&#x2F;27&#x2F;fe-security.html</span><br><span class=\"line\">答案: a、b、c</span><br></pre></td></tr></table></figure><p>5. 下列排序算法中，哪些时间复杂度不会超过 nlogn？</p><p>a. 快速排序 <br>b. 堆排序<br>c. 归并排序<br>d. 冒泡排序</p><p><img src=\"/gallery/sort-way.png\" alt=\"\"></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析: 看图注意是所有情况下的复杂度不超过 nlogn, 快排最坏的情况下是 o(n2) 已经有序的情况下 </span><br><span class=\"line\"> 答案: b、c</span><br></pre></td></tr></table></figure><p>6. 下面关于 transform 说法正确的是 </p><p>a. 只对受控于盒模型的元素生效<br>b. 变形的原点默认是元素的左上角<br>c. 变形后元素在页面上的占位也随之变化<br>d. 可以通过 matrix 函数整合多种变形效果</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析:</span><br><span class=\"line\">transform 变形默认圆点为中心。</span><br><span class=\"line\">transform 变形后占位不会变化，它会创建一个新的图层来显示。</span><br><span class=\"line\">transform 变形的几点可通过 transform-origin 设置，默认系中心点。所以 B 不对。</span><br><span class=\"line\">transform 对行内元素不生效 可参考 https:&#x2F;&#x2F;www.bbsmax.com&#x2F;A&#x2F;x9J2b7agJ6&#x2F;</span><br><span class=\"line\">答案:a、d</span><br></pre></td></tr></table></figure><p>7. 下面对于 Webpack 描述正确的是 </p><p>a.Webpack 是一个模块打包工具<br>b.Webpack 可以运行在服务端和浏览器中<br>c.Webpack 适合复杂的大型项目，小型项目可以使用 vue-cli 等简单的打包工具进行开发<br>d.Webpack 可以实现热更新，开发更加高效</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析: webpack 不在浏览器上运行，webpack 适合小型项目，大型项目用 vue-cli</span><br><span class=\"line\">答案 a、d</span><br></pre></td></tr></table></figure><p>8. 下面哪些方法会中断 js 执行 </p><p>a.alert<br>b.sync ajax 请求<br>c.setTimeout<br>d.fetch</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 同步会中断 js 的执行 </span><br><span class=\"line\">同步 alert sync </span><br><span class=\"line\">异步 setTimeout fetch(参考链接 https:&#x2F;&#x2F;www.ruanyifeng.com&#x2F;blog&#x2F;2020&#x2F;12&#x2F;fetch-tutorial.html) async</span><br><span class=\"line\">答案 a、b</span><br></pre></td></tr></table></figure><p>9. 在 ES6 规范中，以下哪些类型属于基本数据类型？</p><p>a.string<br>b.function<br>c.number<br>d.boolean</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本数据类型（原始数据类型）：Number,String, Null, Undefined,  Boolean，Symbol（es6 新增）BigInt</span><br><span class=\"line\">引用数据类型：Object，Function,Array</span><br><span class=\"line\">答案 a、c、d</span><br></pre></td></tr></table></figure><p>10. 下列哪些协议是应用层协议？</p><p>a.HTTP<br>b.SSL/TLS<br>c.TCP<br>d.SSH<br>e.FTP<br>f.IP</p><p><img src=\"/gallery/iso-7.jpg\"alt=\"\"></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解析:SL&#x2F;TLS 协议工作在应用层和传输层之间 </span><br><span class=\"line\"> 答案 a、d、e</span><br></pre></td></tr></table></figure><p>11. 关于进程，下列说法错误的是？</p><p>a. 进程有独立的地址空间 <br>b. 进程间可以通过网络通信<br>c. 内存不能在不同进程间共享<br>d. 进程是系统进行资源分配和调度的基本单位</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析：进程（Process）是系统进行资源分配和调度的基本单位。</span><br><span class=\"line\">进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位。</span><br><span class=\"line\">答案 c</span><br></pre></td></tr></table></figure><p>12. 下面哪个关于 TCP 与 UDP 的描述是错误的？</p><p>a.TCP 提供可靠度的字节流服务 <br>b. 建立 TCP 连接需要三次握手<br>c. 使用 UDP 传输数据，源端和终端不建立连接<br>d.HTTP 建立在 UDP 之上</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 http3 用了 udp</span><br><span class=\"line\">答案 d</span><br></pre></td></tr></table></figure><p>13. 关于浏览器缓存，下列说法正确的是？</p><p>a.Service Worker cache 的优先级没有 disk cache 高 <br>b. 服务端没法控制浏览器缓存的过期时间<br>c. 浏览器不会将缓存存在内存中<br>d. 浏览器会先在浏览器缓存中查询是否有要请求的文件满足需求，再决定是否发送请求</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 浏览器缓存是性能优化中简单高效的一种方式，按照缓存位置划分为以下几种类型：. service Worker. Memory Cache. Disk Cache. Push Cache. 浏览器请求时，会按照如上的优先级顺序，进行查找缓存，都没有命中时，才会去请求网络 可参考：https:&#x2F;&#x2F;blog.csdn.net&#x2F;m0_37217612&#x2F;article&#x2F;details&#x2F;107942864</span><br><span class=\"line\">答案 d</span><br></pre></td></tr></table></figure><p>14. 下面哪个不能解决跨域问题 </p><p>a.CORS<br>b. 代理<br>c.iframe<br>d.JSONP</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 CORS 是一种允许当前域（domain）的资源（比如 html&#x2F;js&#x2F;web service）被其他域（domain）的脚本请求访问的机制 iframe 某种情况下不能解决跨域 </span><br></pre></td></tr></table></figure><p>15. 以下哪个排序算法不是稳定的？</p><p>a. 快速排序<br>b. 插入排序<br>c. 归并排序<br>d. 选择排序</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 快排和选择排序不稳定 a 在 b 前面,a &#x3D; b , 排序后 a 还在 b 前面则为稳定排序否则不稳定 </span><br><span class=\"line\"> 答案 a、d</span><br></pre></td></tr></table></figure><p>16. 下列关于 GBK 和 UTF8 编码描述错误的是？</p><p>a.GBK 编码汉字占用 2 个字节 <br>b.UTF8 编码占用 3 个字节<br>c.GBK 编码有包含中文简体和繁体字符<br>d.UTF8 编码有包含中文和繁体字符</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 解析 b 选项 utf-8 的长度是可变的 汉字大多数是 3 个字节也有 4 字节的 所有 b 是错的 </span><br><span class=\"line\"> 参考 https:&#x2F;&#x2F;www.cnblogs.com&#x2F;zxz1987&#x2F;articles&#x2F;6544593.html</span><br><span class=\"line\">答案 b</span><br></pre></td></tr></table></figure>","url":"/posts/771/","min2read":8,"word4post":"2.3k","prev_post":{"title":"笔试中的 acm 模式","url":"/posts/61258/"},"next_post":{"title":"面试题","url":"/posts/27055/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"2021 小米秋招前端方向第二场笔试\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">2021 小米秋招前端方向第二场笔试 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"选择题\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 选择题 </span></a></li></ol></li></ol>","categories":[{"name":"笔试","path":"api/categories/笔试.json","url":"/categories/笔试/"}],"tags":[{"name":"笔试","path":"api/tags/笔试.json","url":"/tags/笔试/"}]}