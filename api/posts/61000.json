{"title":"ts 学习笔记 1","slug":"ts学习笔记1","date":"2022-09-07","updated":"2022-09-07","comments":true,"path":"api/posts/61000.json","excerpt":null,"cover":null,"covers":null,"content":"<a id=\"more\"></a><p>整理一下最近学的 ts 知识 </p><h2 id=\"对比原理\"><a class=\"headerlink\" href=\"# 对比原理\"></a> 对比原理 </h2><ul><li> 他是 JavaScript 的一个超集，在原有的基础上，添加了可选静态类型和基于类的面向对象编程方式 </li></ul><h2 id=\"TS 的使用场景\"><a class=\"headerlink\" href=\"#TS 的使用场景\"></a>TS 的使用场景</h2><ul><li> 面向项目 </li></ul><p>TS - 面向解决大型复杂项目，复杂架构以及代码维护场景</p><p>JS - 脚本化语言，用于面向简单页面场景</p><ul><li><p> 自主检测 <br>TS - 编译期间，主动发现并指出错误<br>JS - 无编译阶段</p></li><li><p> 类型检测 <br>TS - 强类型<br>JS - 弱类型</p></li><li><p> 运行流程 <br>TS - 依赖编译，依靠编译打包后，编译成 JS<br>JS - 可以直接运行与浏览器中</p></li><li><p> 复杂特性 <br>TS - 模块化、泛型、接口</p></li></ul><p> 考点：ts 相较于 js 优势 功能 =&gt; 以上 4 个点，ts 如何实现这个功能 =&gt; 多了编译时 =&gt; ts 官方编译器 / babel</p><h2 id=\"TS 的基础类型与写法\"><a class=\"headerlink\" href=\"#TS 的基础类型与写法\"></a>TS 的基础类型与写法 </h2><h3 id=\"布尔值 -boolean\"><a class=\"headerlink\" href=\"# 布尔值 -boolean\"></a> 布尔值 (boolean)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let idDone: boolean &#x3D; false</span><br></pre></td></tr></table></figure><h3 id=\"枚举 -enmu\"><a class=\"headerlink\" href=\"# 枚举 -enmu\"></a> 枚举 (enmu)</h3><p>enum 类型是对 JavaScript 的标准类型的一个补充</p><ul><li> 数字类型枚举，默认情况下，从 0 开始为元素编号，依次递增，也可以手动指定成员的数值 </li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum Score &#123;</span><br><span class=\"line\">    BAD,</span><br><span class=\"line\">    NG,</span><br><span class=\"line\">    GOOD &#x3D; 4,</span><br><span class=\"line\">    PERFET</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><ul><li> 字符串类型枚举, 有值取值 </li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum Score &#123;</span><br><span class=\"line\">    BAD &#x3D; &quot;BAD&quot;,</span><br><span class=\"line\">    NG &#x3D; &quot;NG&quot;,</span><br><span class=\"line\">    GOOD &#x3D; &quot;GOOD&quot;,</span><br><span class=\"line\">    PERFET &#x3D; &quot;PERFET&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><ul><li> 反向映射 - 正反向双重 mapping</li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum Score &#123;</span><br><span class=\"line\">    BAD,</span><br><span class=\"line\">    NG,</span><br><span class=\"line\">    GOOD,</span><br><span class=\"line\">    PERFET</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><ul><li>异构类型 </li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum ENUM &#123;</span><br><span class=\"line\">    A,</span><br><span class=\"line\">    B,</span><br><span class=\"line\">    C &#x3D; &quot;C&quot;,</span><br><span class=\"line\">    D &#x3D; &quot;D&quot;,</span><br><span class=\"line\">    E &#x3D; &quot;6&quot;,</span><br><span class=\"line\">    F</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3 id=\"数字 -number\"><a class=\"headerlink\" href=\"# 数字 -number\"></a> 数字 (number)</h3><p> 和 JavaScript 一样，TypeScirpt 里所有的数字都是浮点数</p>","url":"/posts/61000/","min2read":1,"word4post":399,"prev_post":null,"next_post":{"title":"1 前端面试准备的副本","url":"/posts/6872/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"对比原理\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 对比原理 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"TS 的使用场景\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">TS 的使用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"TS 的基础类型与写法\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">TS 的基础类型与写法 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"布尔值 -boolean\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\"> 布尔值 (boolean)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"枚举 -enmu\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\"> 枚举 (enmu)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"数字 -number\" href = \"#\"><span class=\"toc-number\">3.3.</span> <span class=\"toc-text\"> 数字 (number)</span></a></li></ol></li></ol>","categories":[{"name":"typescript","path":"api/categories/typescript.json","url":"/categories/typescript/"}],"tags":[{"name":"学习笔记","path":"api/tags/学习笔记.json","url":"/tags/学习笔记/"}]}