{"title":"面试总结 10-13","slug":"面试总结10-13","date":"2021-10-13","updated":"2021-10-13","comments":true,"path":"api/posts/13632.json","excerpt":"<p> 今天的面试官人也很好 </p>","cover":null,"covers":null,"content":"<p>今天的面试官人也很好 </p><a id=\"more\"></a><h3 id=\"题目\"><a class=\"headerlink\" href=\"# 题目\"></a> 题目 </h3><p>1. 自我介绍(还没说完，面试官就开始问我问题了)</p><p>2.css 定位</p><p>3. 说一下 transform</p><p>transform 属性可以实现文字或图片的旋转、缩放、倾斜、移动，这 4 种类型的变形处理。</p><h4 id=\"2D\"><a class=\"headerlink\" href=\"#2D\"></a>2D</h4><h4 id=\"1）旋转\"><a class=\"headerlink\" href=\"#1）旋转\"></a>1）旋转</h4><p><strong>rotate 方法</strong>，定义 2D 旋转。<strong> 在参数中加入角度值，角度值后面跟表示角度单位的“deg”文字 </strong> 即可，<strong>旋转方向为顺时针方向。</strong></p><blockquote><p>例：transform：rotate（45deg）； 旋转 45 度。</p></blockquote><h4 id=\"2）缩放\"><a class=\"headerlink\" href=\"#2）缩放\"></a>2）缩放 </h4><p><strong>scale 方法来实现文字或图像的缩放处理，在参数中指定缩放倍率。</strong></p><blockquote><p> 例：transform：scale（0.5）；// 缩小一半 </p></blockquote><p> 可以分别指定元素的水平方向的放大倍率与垂直方向的放大倍率。</p><blockquote><p>例：transform：scale（0.5，2）；// 水平方向缩小一半，垂直方向放大一倍。</p></blockquote><p>**scaleX(<em>x</em>)通过设置 X 轴的值来定义缩放转换。<br>**</p><p><strong>scaleY(<em>y</em>)通过设置 Y 轴的值来定义缩放转换。</strong></p><h4 id=\"3）倾斜\"><a class=\"headerlink\" href=\"#3）倾斜\"></a>3）倾斜 </h4><p><strong>skew 方法实现文字或图像的倾斜处理</strong>，在参数中分别指定<strong> 水平方向上的倾斜角度 </strong> 与<strong>垂直方向上的倾斜角度 </strong>。</p><blockquote><p> 例：transform：skew（30deg，30deg）；// 水平方向上倾斜 30 度，垂直方向上倾斜 30 度。</p></blockquote><p>**skewX(<em>angle</em>)定义沿着 X 轴的 2D 倾斜转换。<br>**</p><p><strong>skewY(<em>angle</em>)定义沿着 Y 轴的 2D 倾斜转换。</strong></p><h4 id=\"4）移动\"><a class=\"headerlink\" href=\"#4）移动\"></a>4）移动 </h4><p><strong>translate 方法来实现移动文字或图像</strong>，在参数中分别指定<strong> 水平方向上的移动距离与垂直方向上的移动距离。</strong></p><blockquote><p>例：transform：translate（50px，50px）；// 水平方向上移动 50px，垂直方向上移动 50px</p></blockquote><p><strong>只使用一个参数，省略另一个参数。这种情况下视为只在水平方向上移动，垂直方向上不移动。</strong></p><p>**translateX(<em>x</em>)定义转换，只是用 X 轴的值。<br>**</p><p><strong>translateY(<em>y</em>)定义转换，只是用 Y 轴的值。</strong></p><h4 id=\"5）变形的基准点\"><a class=\"headerlink\" href=\"#5）变形的基准点\"></a>**5）变形的基准点 **</h4><p>在使用 transform 方法进行文字或图像变形的时候，是 <strong> 以元素的中心点为基准点进行变形的。</strong></p><p>transform-origin 属性可以改变变形的基准点。</p><blockquote><p>例：ransform：rotate（45deg）；</p></blockquote><p><strong>transform-origin：left bottom；// 把基准点修改为元素的左下角 </strong></p><p><strong> 基准点在元素水平方向上的位置：left、center、right；</strong></p><p><strong>基准点在元素垂直方向上的位置：top、center、bottom。</strong></p><h3 id=\"2、3D 旋转\"><a class=\"headerlink\" href=\"#2、3D 旋转\"></a><strong>2、3D 旋转 </strong></h3><h4 id=\"1）旋转 -v2\"><a class=\"headerlink\" href=\"#1）旋转 -v2\"></a>1）旋转</h4><p><strong>rotate3d(<em>x</em>,<em>y</em>,<em>z</em>,<em>angle</em>) 定义 3D 旋转。</strong></p><p> 或者 <strong> 分别使用 rotateX 方法、rotateY 方法、rotateZ 方法使元素围绕 X 轴、Y 轴、Z 轴旋转 </strong>，在参数中加入角度值，角度值后面跟表示角度单位的 deg 文字即可，<strong> 旋转方向为顺时针旋转。</strong></p><blockquote><p>例：transform：rotate3d(x,y,z,angle)</p><p>transform：rotateX（45deg）；</p><p>transform：rotateY（45deg）；</p><p>transform：rotateZ（45deg）；</p><p>transform：rotateX（45deg） rotateY（45deg） rotateZ（45deg）；</p><p>transform：scale（0.5） rotateY（45deg） rotateZ（45deg）；</p></blockquote><h4 id=\"2）缩放 -v2\"><a class=\"headerlink\" href=\"#2）缩放 -v2\"></a>**2）缩放 **</h4><p>**scale3d(<em>x</em>,<em>y</em>,<em>z</em>)定义 3D 缩放转换。<br>**</p><p>或者 <strong> 分别使用 scaleX 方法、scaleY 方法、scaleZ 方法使元素按 X 轴、Y 轴、Z 轴进行缩放，在参数中指定缩放倍率。</strong></p><blockquote><p>例：transform：scale3d(x,y,z)；</p><p>transform：scaleX（0.5）；</p><p>transform：scaleY（1）；</p><p>transform：scaleZ（2）；</p><p>transform：scaleX（0.5）scaleY（1）；</p><p>transform：scale（0.5） rotateY（45deg）；</p></blockquote><h4 id=\"3）倾斜 -v2\"><a class=\"headerlink\" href=\"#3）倾斜 -v2\"></a>**3）倾斜 **</h4><p><strong>分别使用 skewX 方法、skewY 方法使元素在 X 轴、Y 轴上进行顺时针方向倾斜 *<s>（无 skewZ 方法）</s>*</strong>，在参数中指定倾斜的角度。</p><blockquote><p>例：transform：skewX（45deg）；</p><p>transform：skewY（45deg）；</p></blockquote><h4 id=\"4）移动 -v2\"><a class=\"headerlink\" href=\"#4）移动 -v2\"></a>4）移动 </h4><p><strong> 使用 translateX 方法、translateY 方法、translateZ 方法、使元素在 X 轴、Y 轴、Z 轴方向上进行移动，在参数中加入移动距离。</strong></p><blockquote><p>例：transform：translateX（50px）;</p><p>transform：translateY（50px）;</p><p>transform：translateZ（50px）;</p></blockquote><p>4.transition 和 animation 的区别分析 </p><p>ransition 和 animation 是通过 css3 实现动画的两种方式，但是两者存在着什么区别呢</p><p> 首先先分别介绍一下 transition 和 animation 具体如何实现动画吧！</p><ul><li>transition</li></ul><p>举个例子：</p><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">transition</span>: width height <span class=\"number\">2s</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:hover</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure><p>当鼠标悬停在类名为 box 的盒子上时，盒子的宽度和高度会在两秒内变成 200px</p><p>transition: property duration timing-function delay;<br>property：指定 CSS 属性的 name，transition 效果 <br>duration：transition 效果需要指定多少秒或毫秒才能完成<br>timing-function：指定 transition 效果的转速曲线，默认是 “ease”<br>delay：定义 transition 效果开始的时候<br> 注意：transition-duration 为必须值，否则持续时间为 0，transition 不会有任何效果。</p><ul><li>animation</li></ul><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123; </span><br><span class=\"line\">   <span class=\"attribute\">animation</span>: name duration timing-function delay iteration-count direction fill-mode play-state;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>name：规定 @keyframes 动画的名称。<br>duration：动画指定需要多少秒或毫秒完成 <br>timing-function： 规定动画的速度曲线，默认是 “ease”<br>delay：设置动画在启动前的延迟间隔，默认是 0<br>iteration-count：定义动画的播放次数(infinite 为循环播放)（默认为 1）<br>direction：指定是否应该轮流反向播放动画，默认是 “normal”<br>fill-mode：规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式<br>play-state：指定动画是否正在运行或已暂停，默认是 “running”</p><ul><li> 二者的区别 </li></ul><p>transition 和 animation 大部分属性是相同的，他们都是随时间改变元素的属性值，主要区别在于以下几点：</p><p>transition 需要触发一个事件才能改变属性，而 animation 不需要触发任何事件就会随时间改变属性值<br>transition 为两帧，而 animation 可以是一帧一帧的，跟随自定义动画而言，自定义动画定义了多少帧就执行多少帧<br>animation 可以设置很多的属性，比如循环次数，动画结束的状态等等，transition 只能触发一次<br> 性能方面：在使用 aniamtion 的时候可以改变很多属性，比如 width、height、postion 等等这些改变文档流的属性的时候就会引起页面的回流和重绘，对性能影响比较大，而使用 transition 的时候一般会结合 tansfrom 来进行旋转和缩放等，不会生成新的位图，就不会引起页面的重绘了 <br>5. 说下重绘和回流</p><ul><li> 回流 </li></ul><p> 回流又称之为重排，当 Render Tree 中的一部分（或者全部）因元素的规模，尺寸，布局等改变，而需要重新构建页面，就会触发回流 </p><p> 具体总结为：</p><p>页面初始渲染 <br> 添加、删除可见的 DOM 元素 <br> 改变元素位置，尺寸，内容 <br> 触发回流的属性：</p><p>盒子模型相关属性：width、height、display、border、border-width…<br>定位及浮动：position、left、right、top、bottom、float、padding、margin…<br>文字相关：text-align、overflow、font-weight、font-family、line-height，vertical-align、font-size、white-space…</p><ul><li>重绘 </li></ul><p> 当 Render Tree 中的一些元素需要更新属性，而这些属性只是影响到元素的外观，风格而不影响布局，就会触发重绘 </p><p> 触发重绘的属性：</p><p>color、border-style、border-radius、outline、visibility、background-color、text-decoration、background、background-image、box-shadow…</p><p>回流一定重绘，但是重绘不一定回流 </p><ul><li> 如何减少回流和重绘 </li></ul><p> 用 translate 代替 top<br>用 opacity 代替 visibility<br>预先定义好 className，然后统一修改 Dom 的 className<br>不要把 Dom 结点的属性值放在一个循环里面变成循环变量 <br> 让要操作的元素进行“离线处理”，处理完后一起更新 </p><p>6 setTimeout 的顺序问题</p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p> 利用函数闭包，用立刻执行的函数来生成一个函数作用域，将 i 传到匿名函数中。</p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\">(<span class=\"params\">i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;)(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>es6, 把 var 变成 let, 形成块级作用域 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p> 使用 setTimeout 的第三个参数。</p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\">(<span class=\"params\">i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>, i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>7. 求数组的深度 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,[<span class=\"number\">7</span>,<span class=\"number\">9</span>,[<span class=\"number\">11</span>,<span class=\"number\">32</span>]]],<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">multiarr</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(arr[i] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>)&#123;</span><br><span class=\"line\">                a++;</span><br><span class=\"line\">                arr = arr[i];</span><br><span class=\"line\">                multiarr(arr);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(multiarr(arr));</span><br></pre></td></tr></table></figure><p>8.Vue 中的 $nextTick 怎么理解?</p><p> 在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM</p><p>参考：<a href=\"https://blog.csdn.net/weixin_44475093/article/details/111056047\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://blog.csdn.net/weixin_44475093/article/details/111056047</a></p><p>9.vueRoute 的模式</p><p>10.hash 模式的原理</p><p>11.TCP 稳定的原因</p><p>12. 说下 Content-Type</p>","url":"/posts/13632/","min2read":8,"word4post":"2.1k","prev_post":{"title":"面试总结 10-14.md","url":"/posts/33370/"},"next_post":{"title":"面试总结 2","url":"/posts/63846/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"题目\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 题目 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"2D\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">2D</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"1）旋转\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">1）旋转</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"2）缩放\" href = \"#\"><span class=\"toc-number\">1.3.</span> <span class=\"toc-text\">2）缩放 </span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"3）倾斜\" href = \"#\"><span class=\"toc-number\">1.4.</span> <span class=\"toc-text\">3）倾斜 </span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"4）移动\" href = \"#\"><span class=\"toc-number\">1.5.</span> <span class=\"toc-text\">4）移动 </span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"5）变形的基准点\" href = \"#\"><span class=\"toc-number\">1.6.</span> <span class=\"toc-text\">**5）变形的基准点 **</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"2、3D 旋转\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">2、3D 旋转 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"1）旋转 -v2\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">1）旋转</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"2）缩放 -v2\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">**2）缩放 **</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"3）倾斜 -v2\" href = \"#\"><span class=\"toc-number\">2.3.</span> <span class=\"toc-text\">**3）倾斜 **</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"4）移动 -v2\" href = \"#\"><span class=\"toc-number\">2.4.</span> <span class=\"toc-text\">4）移动 </span></a></li></ol></li></ol>","categories":[{"name":"面经","path":"api/categories/面经.json","url":"/categories/面经/"}],"tags":[{"name":"面经","path":"api/tags/面经.json","url":"/tags/面经/"}]}