{"title":"antd 中 Table 的 dataSource 不更新？？","slug":"antd中Table的dataSource不更新？？","date":"2022-01-14","updated":"2022-01-14","comments":true,"path":"api/posts/34168.json","excerpt":"<p> 答应我，别再修改对象属性的时候不深拷贝原对象了！</p><p></p>","cover":"/gallery/bg-001.jpeg","covers":["/gallery/bg-001.jpeg"],"content":"<p>答应我，别再修改对象属性的时候不深拷贝原对象了！</p><p><img src=\"/gallery/bg-001.jpeg\" alt=\"\"></p><a id=\"more\"></a><h1 id=\" 背景 \"><a class=\"headerlink\"href=\"# 背景 \"></a>背景 </h1><p> 前几天在快乐的使用 antd 组件时，做了一个选择权限的表格，表格的结构是树形的，单元格中有 select 框，选择是否有权限，写完了，啪，出问题了。</p><p><img src=\"/gallery/antd-table-error-01.gif\"alt=\"\"></p><h1 id=\"分析\"><a class=\"headerlink\" href=\"# 分析\"></a>分析 </h1><p> 在图中可以看出问题来，当选择的权限后，表格组件没有重新渲染 </p><p><img src=\"/gallery/problem.jpeg\" alt=\"\"></p><p> 在代码中也调用了 this.setState 去重新渲染页面 </p><p><img src=\"/gallery/antd-table-error-02.png\"alt=\"\"></p><p><strong> 是我写的修改权限树的算法耗费太多时间了吗？</strong></p><p>在调用函数之前写上 console.time(‘aaa’)</p><p>在调用函数之后写上 console.timeEnd(‘aaa’)</p><p><img src=\"/gallery/antd-table-error-03.png\" alt=\"\"></p><p>从图中，我们基本上可以确定问题了，修改权限树的函数调用的时间是 0.17ms, 肯定不是算法的问题，我们选择了 select 框，但是控制台上没有打印 render，可以证明没有调用 table 的渲染。</p><p><strong>为什么 Table 没有重新渲染呢？</strong></p><p>冷静的再看下代码，猛的发现，我好像是直接修改了原对象的引用指向的内存数据，没有修改引用，<code>React</code>认为虚拟 <code>DOM</code> 并没有改变，因此，不会重新渲染页面，这就会照成 Table 组件的 dataSource 改变了，但是 Table 并没有重新渲染。</p><h1 id=\" 解决 \"><a class=\"headerlink\"href=\"# 解决 \"></a>解决 </h1><p> 既然问题出在对象的引用没有改变，那么我们让他改变就行了，我只需要对原对象进行拷贝就行了，这时候就要请出我们的深拷贝了，先来手写一个深拷贝函数。</p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deepCopy = <span class=\"function\">(<span class=\"params\">obj</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj || <span class=\"keyword\">typeof</span> obj != <span class=\"string\">'object'</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 判断对象是不是数组 </span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> newObj = <span class=\"built_in\">Array</span>.isArray(obj) ? [] : &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 防止拷贝对象原型链上的属性 hasOwnProperty, 不会判断原型链上的属性</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">            newObj[key] = <span class=\"keyword\">typeof</span> obj[key] == <span class=\"string\">'object'</span> ? deppCopy(obj[key]) : obj[key]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p> 看看改进的效果 </p><p><img src=\"/gallery/antd-table-error-04.gif\"alt=\"\"></p><p><img src=\"/gallery/good.jpg\" alt=\"\"></p><h1 id=\" 总结 \"><a class=\"headerlink\"href=\"# 总结 \"></a> 总结 </h1><p> 答应我，别再修改对象属性的时候不深拷贝原对象了！</p>","url":"/posts/34168/","min2read":1,"word4post":511,"prev_post":{"title":"ES6","url":"/posts/13229/"},"next_post":{"title":"第一周学习总结","url":"/posts/4870/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\" 背景 \" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">背景 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"分析\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">分析 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\" 解决 \" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">解决 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\" 总结 \" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\"> 总结 </span></a></li></ol>","categories":[{"name":"深拷贝","path":"api/categories/深拷贝.json","url":"/categories/深拷贝/"}],"tags":[{"name":"antd, 深拷贝","path":"api/tags/antd, 深拷贝.json","url":"/tags/antd-深拷贝/"}]}