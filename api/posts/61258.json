{"title":"笔试中的 acm 模式","slug":"笔试中的acm模式","date":"2021-10-09","updated":"2021-10-09","comments":true,"path":"api/posts/61258.json","excerpt":"<p>ACM 模式下 JS 的输入与输出 </p>","cover":null,"covers":null,"content":"<p>ACM 模式下 JS 的输入与输出 </p><a id=\"more\"></a><p> 总结一下遇到的 ACM 模式 </p><h2 id=\"牛客网\"><a class=\"headerlink\" href=\"# 牛客网\"></a> 牛客网 </h2><h3 id=\"v8 环境\"><a class=\"headerlink\" href=\"#v8 环境\"></a>v8 环境</h3><p> 以计算 a + b 为例 </p><p> 输入 </p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 5</span><br><span class=\"line\">10 20</span><br></pre></td></tr></table></figure><p> 输出 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br></pre></td></tr></table></figure><p> 代码如下 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (line=readline()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num1 = <span class=\"built_in\">parseInt</span>(line.split(<span class=\"string\">''</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num2 = <span class=\"built_in\">parseInt</span>(line.split(<span class=\"string\">' '</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    print(num1 + num2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p> 小结：v8 模式下的输入是 <strong>readline()</strong>, 读的是字符串，一行一行地读，如果有空格用 spilt(’') 分割，如果要运行用 parseInt()转成数字，toFixed(n)保留 n 位有效数字。输出用 console.log()或者 print()</p><h3 id=\"node-js\"><a class=\"headerlink\" href=\"#node-js\"></a>node.js</h3><p>以计算 a + b 为例 </p><p> 输入 </p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 5</span><br><span class=\"line\">10 20</span><br></pre></td></tr></table></figure><p> 输出 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br></pre></td></tr></table></figure><p> 代码如下 </p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">'readline'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.createInterface(&#123;</span><br><span class=\"line\">    input: process.stdin,</span><br><span class=\"line\">    output: process.stdout</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">rl.on(<span class=\"string\">'line'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">line</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tokens = line.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">parseInt</span>(tokens[<span class=\"number\">0</span>]) + <span class=\"built_in\">parseInt</span>(tokens[<span class=\"number\">1</span>]));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><p> 小结：node 环境下需要引入 readline 模块，相对于 v8 来说比较麻烦，所以有 v8 就用 v8</p><h2 id=\" 赛码网 \"><a class=\"headerlink\"href=\"# 赛码网 \"></a>赛码网 </h2><h3 id=\"v8\"><a class=\"headerlink\"href=\"#v8\"></a>v8</h3><h2 id=\" 版本 \"><a class=\"headerlink\"href=\"# 版本 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%89%88%E6%9C%AC-3\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 版本 </a></h2><blockquote><p>Google V8 Engine(6.2.340)</p></blockquote><h2 id=\" 输入 API\"><a class=\"headerlink\"href=\"# 输入 API\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%BE%93%E5%85%A5api\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 输入 API</a></h2><h3 id=\" 读取一行输入 \"><a class=\"headerlink\"href=\"# 读取一行输入 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%AF%BB%E5%8F%96%E4%B8%80%E8%A1%8C%E8%BE%93%E5%85%A5\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">读取一行输入 </a></h3><blockquote><p>read_line()</p></blockquote><blockquote><p> 将读取至多 1024 个字符，当还未达到 1024 个时如果遇到回车或结束符，提前结束。</p></blockquote><blockquote><p>读取多行最简单的办法是 while((line = read_line()) != ‘’)。</p></blockquote><blockquote><p>或者使用下一个 API。</p></blockquote><h3 id=\" 读取 n 个字符 \"><a class=\"headerlink\"href=\"# 读取 n 个字符 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%AF%BB%E5%8F%96n%E4%B8%AA%E5%AD%97%E7%AC%A6\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">读取 n 个字符 </a></h3><blockquote><p>gets(n)</p></blockquote><blockquote><p> 将读取至多 n 个字符，当还未达到 n 个时如果遇到回车或结束符，会提前结束。</p></blockquote><blockquote><p>回车符可能会包含在返回值中。</p></blockquote><h3 id=\" 读取一个（长）整数 \"><a class=\"headerlink\"href=\"# 读取一个（长）整数 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%AF%BB%E5%8F%96%E4%B8%80%E4%B8%AA%EF%BC%88%E9%95%BF%EF%BC%89%E6%95%B4%E6%95%B0\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">读取一个（长）整数 </a></h3><blockquote><p>readInt()</p></blockquote><h3 id=\" 读取一个浮点型 \"><a class=\"headerlink\"href=\"# 读取一个浮点型 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%AF%BB%E5%8F%96%E4%B8%80%E4%B8%AA%E6%B5%AE%E7%82%B9%E5%9E%8B\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 读取一个浮点型 </a></h3><blockquote><p>readDouble()</p></blockquote><h2 id=\" 输出 API\"><a class=\"headerlink\"href=\"# 输出 API\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%BE%93%E5%87%BAapi\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 输出 API</a></h2><h3 id=\" 不加回车的输出 \"><a class=\"headerlink\"href=\"# 不加回车的输出 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E4%B8%8D%E5%8A%A0%E5%9B%9E%E8%BD%A6%E7%9A%84%E8%BE%93%E5%87%BA\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">不加回车的输出 </a></h3><blockquote><p>printsth(sth, …)</p></blockquote><blockquote><p> 往控制台输出 sth，当有多个参数时，空格分隔；最后不加回车。</p></blockquote><h3 id=\" 带回车的输出 \"><a class=\"headerlink\"href=\"# 带回车的输出 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E5%B8%A6%E5%9B%9E%E8%BD%A6%E7%9A%84%E8%BE%93%E5%87%BA\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">带回车的输出 </a></h3><blockquote><p>print(sth, …)</p></blockquote><blockquote><p>console.log(sth, …)</p></blockquote><blockquote><p> 往控制台输出 sth，当有多个参数时，空格分隔；最后加回车。</p></blockquote><h2 id=\" 示例代码 1\"><a class=\"headerlink\"href=\"# 示例代码 1\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%811\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">示例代码 1</a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a, b;</span><br><span class=\"line\"><span class=\"keyword\">var</span> solveMeFirst = <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a+b;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((a=readInt())!=<span class=\"literal\">null</span> &amp;&amp; (b=readInt())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c = solveMeFirst(a, b);</span><br><span class=\"line\">    print(c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\" 示例代码 2\"><a class=\"headerlink\"href=\"# 示例代码 2\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%812\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">示例代码 2</a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> line;</span><br><span class=\"line\"><span class=\"keyword\">var</span> solveMeFirst = <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a+b;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((line = read_line()) != <span class=\"string\">''</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = line.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"built_in\">parseInt</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"built_in\">parseInt</span>(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c = solveMeFirst(a, b);</span><br><span class=\"line\">    print(c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"V8 源码 \"><a class=\"headerlink\"href=\"#V8 源码 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=v8%E6%BA%90%E7%A0%81\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">V8 源码 </a></h2><blockquote><p><a href=\"https://github.com/acmcodercom/v8/tree/forstdio_baseon_6.2.340/samples\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">https://github.com/acmcodercom/v8/tree/forstdio_baseon_6.2.340/samples</a></p></blockquote><h1 id=\"Nodejs\"><a class=\"headerlink\"href=\"#Nodejs\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=nodejs\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">Nodejs</a></h1><h2 id=\" 版本 -v2\"><a class=\"headerlink\"href=\"# 版本 -v2\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%89%88%E6%9C%AC-4\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 版本 </a></h2><blockquote><p>6.9.1</p></blockquote><h2 id=\" 输入输出 \"><a class=\"headerlink\"href=\"# 输入输出 \"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA-1\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 输入输出 </a></h2><blockquote><p>process.stdin、process.stdout</p></blockquote><blockquote><p>readline</p></blockquote><blockquote><p>node-stdio (<a href=\"https://www.npmjs.com/package/node-stdio\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">https://www.npmjs.com/package/node-stdio</a>)</p></blockquote><h2 id=\" 示例代码 1-v2\"><a class=\"headerlink\"href=\"# 示例代码 1-v2\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%811-1\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\"> 示例代码 1</a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"built_in\">require</span>(<span class=\"string\">'node-stdio'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> a, b;</span><br><span class=\"line\"><span class=\"keyword\">var</span> solveMeFirst = <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a+b;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((a=cmd.readInt())!=<span class=\"literal\">null</span> &amp;&amp; (b=cmd.readInt())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c = solveMeFirst(a, b);</span><br><span class=\"line\">    cmd.print(c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\" 示例代码 2-v2\"><a class=\"headerlink\"href=\"# 示例代码 2-v2\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%812-1\"target=\"_blank\"rel=\"noopener external nofollow noreferrer\">示例代码 2</a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.stdin.resume();</span><br><span class=\"line\">process.stdin.setEncoding(<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> input = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> input_array = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里不灵活，需要全部读取数据后再处理，容易超内存。</span></span><br><span class=\"line\">process.stdin.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    input += data;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveMeFirst = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a+b;</span><br><span class=\"line\"></span><br><span class=\"line\">process.stdin.on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = input.split(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] != <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">            input_array = arr[i].split(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">let</span> inline = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> res;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> _a = <span class=\"built_in\">parseInt</span>(input_array[inline].trim(), <span class=\"number\">10</span>);</span><br><span class=\"line\">            inline += <span class=\"number\">1</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">let</span> _b = <span class=\"built_in\">parseInt</span>(input_array[inline].trim(), <span class=\"number\">10</span>);</span><br><span class=\"line\">            inline += <span class=\"number\">1</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">            res = solveMeFirst(_a, _b);</span><br><span class=\"line\">            process.stdout.write(<span class=\"string\">\"\"</span> + res + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><h2 id=\"示例代码 3\"><a class=\"headerlink\" href=\"# 示例代码 3\"></a><a href=\"https://labfiles.acmcoder.com/ojhtml/index.html#/?id=%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%813\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">示例代码 3</a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">'readline'</span>);</span><br><span class=\"line\">process.stdin.setEncoding(<span class=\"string\">'utf-8'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> rl = readline.createInterface(&#123;<span class=\"attr\">input</span>: process.stdin, <span class=\"attr\">output</span>: process.stdout, <span class=\"attr\">prompt</span>:<span class=\"string\">''</span>&#125;);</span><br><span class=\"line\">rl.prompt();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> solveMeFirst = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a+b;</span><br><span class=\"line\"></span><br><span class=\"line\">rl.on(<span class=\"string\">'line'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = data.split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr &amp;&amp; arr.length==<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> c = solveMeFirst(+arr[<span class=\"number\">0</span>], +arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        process.stdout.write(<span class=\"string\">''</span> + c + <span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","url":"/posts/61258/","min2read":3,"word4post":758,"prev_post":{"title":"面试总结 2","url":"/posts/63846/"},"next_post":{"title":"笔试题总结","url":"/posts/771/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"牛客网\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 牛客网 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"v8 环境\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">v8 环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"node-js\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">node.js</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 赛码网 \" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">赛码网 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"v8\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">v8</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 版本 \" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\"> 版本 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 输入 API\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\"> 输入 API</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 读取一行输入 \" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\">读取一行输入 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 读取 n 个字符 \" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\">读取 n 个字符 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 读取一个（长）整数 \" href = \"#\"><span class=\"toc-number\">4.3.</span> <span class=\"toc-text\">读取一个（长）整数 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 读取一个浮点型 \" href = \"#\"><span class=\"toc-number\">4.4.</span> <span class=\"toc-text\"> 读取一个浮点型 </span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 输出 API\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\"> 输出 API</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 不加回车的输出 \" href = \"#\"><span class=\"toc-number\">5.1.</span> <span class=\"toc-text\">不加回车的输出 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\" 带回车的输出 \" href = \"#\"><span class=\"toc-number\">5.2.</span> <span class=\"toc-text\">带回车的输出 </span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 示例代码 1\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">示例代码 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 示例代码 2\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\">示例代码 2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"V8 源码 \" href = \"#\"><span class=\"toc-number\">8.</span> <span class=\"toc-text\">V8 源码 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Nodejs\" href = \"#\"><span class=\"toc-number\"></span> <span class=\"toc-text\">Nodejs</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 版本 -v2\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 版本 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 输入输出 \" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\"> 输入输出 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 示例代码 1-v2\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\"> 示例代码 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\" 示例代码 2-v2\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">示例代码 2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"示例代码 3\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">示例代码 3</span></a></li></ol>","categories":[],"tags":[]}